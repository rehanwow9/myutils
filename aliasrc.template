alias ll='ls -alh --group-directories-first'
alias rmf='sudo rm -rf'
alias df='df -h'
alias du='du -sch'
alias ps='ps aux'
alias psg='ps aux | grep'
alias gi='grep -i'
alias gri='grep -rin'
alias free='free -h'
alias ssh='ssh -X'

# Proper brightness in the night. I think will work for daytime as well
br() {
	if [[ -z $1 ]]; then
		echo "usage: br INT"
		echo "  INT is an integer from 1 to 4"
	elif [ $1 -eq 1 -o $1 -eq 2 -o $1 -eq 3 -o $1 -eq 4 ]; then
	        echo $(($1*1000)) | sudo tee /sys/class/backlight/intel_backlight/brightness >/dev/null;
	else
		echo "usage: br INT"
		echo "  INT is an integer from 1 to 4"
	fi
}

# Dirty solution to make the mouse work in case it doesn't.
# Don't try to use it if your mouse work fine. It might cause
# scrolling to stop permanently on your laptop.
alias ms='sudo modprobe -r psmouse; sudo modprobe psmouse proto=imps'

alias gitinit='\
git config --global user.name "Rushi Agrawal"; \
git config --global user.email rushi.agr@gmail.com'

# FS stands for 'fix screen'
alias fs='sudo chown stack:stack `readlink /proc/self/fd/0`'

## All git aliases
alias gcam='git commit -a -m'
alias gcaa='git commit -a --amend'
alias gpom='git push origin master'
alias gpo='git push origin'
alias gs='git status'
alias gb='git branch'
alias gl='git log'
alias gr='git remote --verbose'
alias gba='git branch --all'
alias gpuom='git pull origin master'
alias gitremove='git reset --soft HEAD^ && git reset --hard'
gcl() {
    if [[ -z $1 ]]; then
        echo "usage: gc <github-user>/<repository>"
        return
    fi
    git clone https://github.com/$1
}
alias gch='git checkout'
alias gchb='git checkout -b'
alias gd='git diff'
alias gaa='git add --all'
# X-series!
gxc() {
    echo "Experimental.."
    if [[ -z $1 ]]; then
        BRANCH=master
    else
        BRANCH=$1
    fi
    git add --all
    git commit -a
    git push origin $BRANCH
}

alias gdecorate='git log --oneline --graph --decorate --all'

### Commands to mount and unmount a qcow2 image, for modifications
## $1 is the qcow2 image
## $2 is optional, mountpoint, which defaults to /mnt
# TODO: check if qemu-nbd is installed
# TODO: if current working directory is inside the mountpoint, then
#   move out of that directory and then umount
mntq () {
    if [[ -z $1 ]]; then
        echo "  usage: mntq image-to-mount.qcow2 [/mountpoint]"
        kill -INT $$
    fi
    MNTPOINT=/mnt
    if [[ ! -z $2 ]]; then
        $MNTPOINT=$2;
    fi
    sudo modprobe nbd;
    sudo qemu-nbd -c /dev/nbd0 $1
    sudo mount /dev/nbd0p1 $MNTPOINT
}

umntq () {
    MNTPOINT=/mnt
    if [[ ! -z $1 ]]; then
        $MNTPOINT=$1;
    fi
    sudo umount $MNTPOINT
    sudo qemu-nbd -d /dev/nbd0
}



### Tools to route internet to an interface. Might not work with wireless networks.


net-route() {
    if [ -z $1 -o -z $2 ]; then
        echo "  usage: net-route FROM-IF TO-IF"
        kill -INT $$
    fi
    sudo iptables --append POSTROUTING --table nat --out-interface $1 --jump MASQUERADE
    sudo iptables --append FORWARD --in-interface $2 --out-interface $1 --match state --state RELATED,ESTABLISHED --jump ACCEPT
}

net-unroute() {
    if [ -z $1 -o -z $2 ]; then
        echo "  usage: net-unroute FROM-IF TO-IF"
        kill -INT $$
    fi  
    sudo iptables --delete POSTROUTING --table nat --out-interface $1 --jump MASQUERADE
    sudo iptables --delete FORWARD --in-interface $2 --out-interface $1 --match state --state RELATED,ESTABLISHED --jump ACCEPT
}

export VPN_CONF_PATH=__VPN_CONF_PATH__


vpn () {
    source $VPN_CONF_PATH

    IFS=","

    if [ $# -eq 0 ]
    then
        echo "usage: vpn.sh [h|o]"
        echo "   o stands for office, h for home"
        return
    fi

    if [ $1 == "o" ]; then
        GATEWAY=$OFFICEGW
    else
        GATEWAY=$HOMEGW
    fi

    connected=`ps aux | grep openconnect | grep vpnc | wc -l`

    if [ $connected -eq 0 ]; then
        sudo openconnect -b -u $USER -s /etc/vpnc/vpnc-script $VPNIP
        sudo route del -net 0.0.0.0 netmask 0.0.0.0 dev tun0
        sudo route add default gw $GATEWAY
        for ROUTE in $ROUTES; do
            sudo route add -net $ROUTE/24 dev tun0
        done
    fi
}
